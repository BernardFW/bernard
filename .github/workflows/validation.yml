name: Validation

on:
  push:
    branches:
      - develop
    tags:
      - '*'

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools poetry
          python -m poetry self add "poetry-dynamic-versioning[plugin]"
          python -m poetry install

      - name: Run Pytest
        run: python -m poetry run pytest

      - name: Build package
        run: python -m poetry build

      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: bernard
          path: dist/
          if-no-files-found: error

      - name: Upload to Pypi
        if: github.ref_type == 'tag'
        run: python -m poetry run twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
